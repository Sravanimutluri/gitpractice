---
apiVersion: v1
kind: Service
metadata: 
  name: jenkins-svc
  labels:
    app: jenkins
    env: dev
spec: 
  selector: 
    app: jenkins
  type: LoadBalancer
  ports: 
    - name: jenkins
      port: 8080
      targetPort: 8080
      protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata: 
  name: jenkins-dep
  labels: 
    app: jenkins
spec: 
  minReadySeconds: 2
  replicas: 3
  selector:
    matchLabels: 
      app: jenkins
  strategy:
    type: RollingUpdate
    rollingUpdate: 
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata: 
      name: jenkins
      labels: 
        app: jenkins
    spec: 
      containers:
        - name: jenkins
          image: jenkins
          imagePullPolicy: Always
          livenessProbe: 
            failureThreshold: 1
            initialDelaySeconds: 1
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 10
            httpGet: 
              path: /
              port: 8080
          readinessProbe: 
            failureThreshold: 1
            initialDelaySeconds: 1
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 10
            httpGet: 
              path: /
              port: 8080
          ports: 
            - containerPort: 8080
              protocol: TCP
      initContainers: 
        - name: alpine
          image: alpine
          args: 
            - sleep
            - 10s
        - name: init-myservice
          image: busybox
          args: 
            - 'sh' 
            - '-c' 
            - "until nslookup jenkins-svc.default.svc.cluster.local; do echo waiting for myservice; sleep 2; done"